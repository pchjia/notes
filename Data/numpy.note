numpy http://docs.scipy.org/doc/numpy/reference/

1. data struct
    1) type
        bool
        inti    int8        int16           int32       int64
                uint8       uint16          uint32      uint64
                            float16         float32     float64/float
                                                        complex64   complex128/complex

    2). 使用数据类型
        numpy.int_([1, 2, 3])
        numpy.arange(3, dtype=numpy.uint8)

        np.int64
        np.float64

    3). 转换数据类型
        a = numpy.int_(1)
        b = a.astype(float)     # numpy 把基本python类型转换成numpy.*类型
                                    int as int_, float as float_,
                                    bool as bool_, complex as complex_
        b = numpy.float(a)

    4). 查看数据类型
        a = numpy.int_(1)
        a.dtype
        np.issubdtype(a, int)

2. numpy.array
    # properties
        ndim            # dimention
        size            # number of items
        itemsize        # each item bytes
        nbytes          # total items bytes
        T               # transpose
        flat[index]     # one dimention

    # create
        np.array([1, 2], dtype=np.int64)
        np.zeros((2, 3))
        np.ones((2, 3))
        np.full((2, 3), 7)
        np.eye(2)
        np.random.random((2, 3))

        # list to array
        np.asarray([1, 2])

        # array to list
        np.ndarry.tolist()

    # index
        a = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]])
        b = a[:2, 1:3]  # a[rows, columns]

        # integer indexing
        a[1, 1]

        # array indexing
        a[[0, 1], [1, 2]]

        # boolean index
        a[a > 2]

    # math: http://docs.scipy.org/doc/numpy/reference/routines.math.html
        # 只在对应位置上计算
        + - * / sqrt equal to  np.add np.substract np.multuply np.divide np.sqrt

        # 点乘
        np.dot(x, y) or x.dor(y)

        # sum
        np.sum(x) # all elements
        np.sum(x, axis=0) # sum of each columns
        np.sum(x, axis=1) # sum of each lines

    # broadcasting

    # arrange
        b = np.arange(24)
        b.reshape b.resize/b.shape = ()
        b.ravel b.flatten
        b.transpose

        np.hstack((a, b)) np.column_stack((a, b))   # 水平组合
        np.vstack((a, b)) np.row_stack((a, b))      # 垂直组合
        np.concatenate((a, b), axis=0)              # axis: 0 垂直, 1 水平

    # split
        np.split                        # 水平分割
        np.vsplit                       # 垂直分割
        np.split(a, num, axis=0)        # 分割，指定坐标轴
        np.dsplit
