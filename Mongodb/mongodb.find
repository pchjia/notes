find 高级查询

1. {field: value}  最简单的一种
    db.goods.find({goods_id: 3})

2. $ne != 不等于
    {field: {$ne: value}} 某列不等于某值
        db.goods.find({cat_id: {$ne: 3}}, {goods_name: 1, cat_id: 1, _id:0})

   $gt > 大于
   $lt < 小于
   $gte >= 大于等于
   $lte <= 小于等于
   $in 匹配一个数组中的任意值
   $nin 
        db.goods.find({cat_id: {$in: [4, 11]}}, {cat_id: 1, goods_name:1, _id:0})

2. $or $and $not $nor
    $or 或
    $and 与
    $not 非
    $nor 所有条件都不满足
        db.goods.find({$and: [{shop_price: {$gte: 100}}, {shop_price: {$lte: 500}}] }, {shop_price: 1, goods_name: 1, _id: 0})
        db.goods.find({$nor: [{cat_id: 3}, {cat_id: 11}]}, {cat_id: 1, goods_name: 1, _id: 0})

3. $exists
    {field: {$exists: 1}} 含有某列的字段

4. $mod 满足求余条件
        db.goods.find({goods_id: {$mod: [5, 0]}}, {goods_name: 1, goods_id: 1, _id:0})

5. $type 数据为某类型
    {field: {$type: 2}}  # string

5. $all 数组单元都匹配才可
    {field: {$all: [v1, v2, ...]}}

6. $where 把文件转换成js对象，访问它的属性，效率低
    {$where: 'this.shop_price > 5000'}

7. $regex 正则表达式
    {field: {$regex: 'pattern'}}

